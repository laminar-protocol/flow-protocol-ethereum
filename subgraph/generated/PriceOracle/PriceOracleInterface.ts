// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class PriceUpdated extends EthereumEvent {
  get params(): PriceUpdated__Params {
    return new PriceUpdated__Params(this);
  }
}

export class PriceUpdated__Params {
  _event: PriceUpdated;

  constructor(event: PriceUpdated) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PriceOracleInterface extends SmartContract {
  static bind(address: Address): PriceOracleInterface {
    return new PriceOracleInterface("PriceOracleInterface", address);
  }

  isPriceOracle(): boolean {
    let result = super.call("isPriceOracle", []);

    return result[0].toBoolean();
  }

  try_isPriceOracle(): CallResult<boolean> {
    let result = super.tryCall("isPriceOracle", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  getPrice(addr: Address): BigInt {
    let result = super.call("getPrice", [EthereumValue.fromAddress(addr)]);

    return result[0].toBigInt();
  }

  try_getPrice(addr: Address): CallResult<BigInt> {
    let result = super.tryCall("getPrice", [EthereumValue.fromAddress(addr)]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }
}
